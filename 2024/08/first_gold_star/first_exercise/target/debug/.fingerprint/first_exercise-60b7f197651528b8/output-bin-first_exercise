{"$message_type":"diagnostic","message":"expected one of `!`, `+`, `,`, `->`, `::`, or `>`, found `;`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2210,"byte_end":2211,"line_start":67,"line_end":67,"column_start":109,"column_end":110,"is_primary":true,"text":[{"text":"    let all_important_char_coordinates: Vec<Vec<(usize, usize)> = get_all_important_char_coordinates(vec_2D);","highlight_start":109,"highlight_end":110}],"label":"expected one of `!`, `+`, `,`, `->`, `::`, or `>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use a comma to separate type parameters","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2210,"byte_end":2216,"line_start":67,"line_end":68,"column_start":109,"column_end":5,"is_primary":true,"text":[{"text":"    let all_important_char_coordinates: Vec<Vec<(usize, usize)> = get_all_important_char_coordinates(vec_2D);","highlight_start":109,"highlight_end":110},{"text":"    for coordinates in all_important_char_coordinates {","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":", ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `!`, `+`, `,`, `->`, `::`, or `>`, found `;`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:67:109\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0moordinates(vec_2D);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `!`, `+`, `,`, `->`, `::`, or `>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use a comma to separate type parameters\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let all_important_char_coordinates: Vec<Vec<(usize, usize)> = get_all_important_char_coordinates(vec_2D)\u001b[0m\u001b[0m\u001b[38;5;10m, \u001b[0m\u001b[0mfor coordinates in all_important_char_coordinates {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                                             \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"comparison operators cannot be chained","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2145,"byte_end":2146,"line_start":67,"line_end":67,"column_start":44,"column_end":45,"is_primary":true,"text":[{"text":"    let all_important_char_coordinates: Vec<Vec<(usize, usize)> = get_all_important_char_coordinates(vec_2D);","highlight_start":44,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2149,"byte_end":2150,"line_start":67,"line_end":67,"column_start":48,"column_end":49,"is_primary":true,"text":[{"text":"    let all_important_char_coordinates: Vec<Vec<(usize, usize)> = get_all_important_char_coordinates(vec_2D);","highlight_start":48,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2145,"byte_end":2145,"line_start":67,"line_end":67,"column_start":44,"column_end":44,"is_primary":true,"text":[{"text":"    let all_important_char_coordinates: Vec<Vec<(usize, usize)> = get_all_important_char_coordinates(vec_2D);","highlight_start":44,"highlight_end":44}],"label":null,"suggested_replacement":"::","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: comparison operators cannot be chained\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:67:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let all_important_char_coordinates: Vec<Vec<(usize, usize)> = get_all_important_char_co\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let all_important_char_coordinates: Vec\u001b[0m\u001b[0m\u001b[38;5;10m::\u001b[0m\u001b[0m<Vec<(usize, usize)> = get_all_important_char_coordinates(vec_2D);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected `<`, found `coordinates`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2220,"byte_end":2231,"line_start":68,"line_end":68,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    for coordinates in all_important_char_coordinates {","highlight_start":9,"highlight_end":20}],"label":"expected `<`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":2140,"byte_end":2141,"line_start":67,"line_end":67,"column_start":39,"column_end":40,"is_primary":false,"text":[{"text":"    let all_important_char_coordinates: Vec<Vec<(usize, usize)> = get_all_important_char_coordinates(vec_2D);","highlight_start":39,"highlight_end":40}],"label":"while parsing the type for `all_important_char_coordinates`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `=` if you meant to assign","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2140,"byte_end":2141,"line_start":67,"line_end":67,"column_start":39,"column_end":40,"is_primary":true,"text":[{"text":"    let all_important_char_coordinates: Vec<Vec<(usize, usize)> = get_all_important_char_coordinates(vec_2D);","highlight_start":39,"highlight_end":40}],"label":null,"suggested_replacement":" =","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected `<`, found `coordinates`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:68:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let all_important_char_coordinates: Vec<Vec<(usize, usize)> = get_all_important_char_co\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mwhile parsing the type for `all_important_char_coordinates`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: use `=` if you meant to assign\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for coordinates in all_important_char_coordinates {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `<`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected one of `;` or `else`, found `>`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2164,"byte_end":2165,"line_start":67,"line_end":67,"column_start":63,"column_end":64,"is_primary":true,"text":[{"text":"    let all_important_char_coordinates: Vec<Vec<(usize, usize)> = get_all_important_char_coordinates(vec_2D);","highlight_start":63,"highlight_end":64}],"label":"expected one of `;` or `else`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `;` or `else`, found `>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:67:63\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mates: Vec<Vec<(usize, usize)> = get_all_important_char_coordinates(vec_2D);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `;` or `else`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `antenna_pairs` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":905,"byte_end":918,"line_start":32,"line_end":32,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    return antenna_pairs;","highlight_start":12,"highlight_end":25}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `antenna_pairs` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:32:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return antenna_pairs;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 5 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 5 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}
